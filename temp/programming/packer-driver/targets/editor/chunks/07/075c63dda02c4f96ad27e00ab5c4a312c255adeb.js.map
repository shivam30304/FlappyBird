{"version":3,"sources":["file:///Users/shivam/Desktop/JumpBird/assets/Scripts/Pipes.ts"],"names":["_decorator","Component","Node","Vec3","screen","find","UITransform","ccclass","property","random","min","max","Math","Pipes","type","tooltip","tempStartLocationUp","tempStartLocationDown","scene","windowSize","game","initSpeed","pipeSpeed","tempSpeed","isPass","onLoad","getComponent","initPos","x","topPipe","width","bottomPipe","gap","topHeight","y","setPosition","update","deltaTime","position","passPipe","createPipe","destroy","increaseSpeed","resetSpeed"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, screen, find, UITransform} from 'cc';\nconst { ccclass, property } = _decorator;\n\nconst random = (min, max) => {\n    return Math.random() * (max - min) + min;\n}\n\n@ccclass('Pipes')\nexport class Pipes extends Component {\n    @property({\n        type:Node,\n        tooltip:'Top Pipe'\n    })\n    public topPipe : Node;\n\n    @property({\n        type:Node,\n        tooltip:'Bottom Pipe'\n    })\n    public bottomPipe : Node;\n\n    public tempStartLocationUp: Vec3 = new Vec3(0, 0, 0);\n    public tempStartLocationDown: Vec3 = new Vec3(0, 0, 0);\n    public scene = screen.windowSize;\n\n    public game; // speed of the pipes from the gameCtrl\n    public initSpeed : number = 0; // initial speed of the pipes\n    public pipeSpeed: number; // final speed of the pipes\n    public tempSpeed: number; // temporary speed\n\n    isPass: boolean;\n    protected onLoad(): void {\n        this.game = find('GameCtrl').getComponent('GameCtrl');\n        this.initSpeed = this.game.pipeSpeed;\n        this.pipeSpeed = this.initSpeed;\n        this.initPos();\n        this.isPass = false;\n    }\n\n    initPos() {\n        this.tempStartLocationUp.x = (this.topPipe.getComponent(UITransform).width + this.scene.width)\n        this.tempStartLocationDown.x = (this.bottomPipe.getComponent(UITransform).width + this.scene.width)\n        let gap = random(90, 110);\n        let topHeight = random(0, 500);\n        \n        this.tempStartLocationUp.y = topHeight;\n        this.tempStartLocationDown.y = (topHeight - (gap * 10));\n\n        this.bottomPipe.setPosition(this.tempStartLocationDown);\n        this.topPipe.setPosition(this.tempStartLocationUp);\n    }\n\n    update(deltaTime:number) {\n        this.tempSpeed = this.pipeSpeed * deltaTime;\n\n        this.tempStartLocationDown = this.bottomPipe.position;\n        this.tempStartLocationUp = this.topPipe.position;\n\n        this.tempStartLocationDown.x -= this.tempSpeed;\n        this.tempStartLocationUp.x -= this.tempSpeed;\n\n        this.bottomPipe.setPosition(this.tempStartLocationDown);\n        this.topPipe.setPosition(this.tempStartLocationUp);\n\n\n        if (this.isPass == false && this.topPipe.position.x <= 0) {\n            this.isPass = true;\n            this.game.passPipe();\n        }\n\n        if (this.topPipe.position.x < (0 - this.scene.width)) {\n            this.game.createPipe();\n            this.destroy();\n        }\n    }\n    increaseSpeed() {\n        this.pipeSpeed = this.initSpeed + 50;\n    }\n    resetSpeed() {\n        this.pipeSpeed = this.initSpeed;\n    }\n}\n\n"]}