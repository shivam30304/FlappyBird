{"version":3,"sources":["file:///Users/shivam/Desktop/JumpBird/assets/Scripts/Results.ts"],"names":["_decorator","Component","Label","ccclass","property","Results","type","maxScore","currentScore","lastScore","updateScore","num","scoreLabel","string","resetScore","hideResults","addScore","showResults","Math","max","highScore","resultEnd","node","active"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,K,OAAAA,K;;;;;;;;;OAC1B;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;yBAIjBK,O,WADZF,OAAO,CAAC,SAAD,C,UAEHC,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAACJ;AADC,OAAD,C,UAKRE,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAACJ;AADC,OAAD,C,UAKRE,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAACJ;AADC,OAAD,C,2BAZb,MACaG,OADb,SAC6BJ,SAD7B,CACuC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,eAgBnCM,QAhBmC,GAgBf,CAhBe;AAAA,eAiBnCC,YAjBmC;AAAA,eAkB5BC,SAlB4B,GAkBP,CAlBO;AAAA;;AAoBnCC,QAAAA,WAAW,CAACC,GAAD,EAAe;AACtB,eAAKH,YAAL,GAAoBG,GAApB;AACA,eAAKC,UAAL,CAAgBC,MAAhB,GAA0B,KAAK,KAAKL,YAApC;AACH;;AAEDM,QAAAA,UAAU,GAAG;AACT,eAAKJ,WAAL,CAAiB,CAAjB;AACA,eAAKD,SAAL,GAAiB,CAAjB;AACA,eAAKM,WAAL;AACH;;AAEDC,QAAAA,QAAQ,GAAG;AACP,eAAKN,WAAL,CAAiB,KAAKF,YAAL,GAAoB,CAArC;;AACA,cAAI,KAAKA,YAAL,GAAoB,KAAKC,SAAzB,IAAsC,EAA1C,EAA8C;AAC1C,iBAAKA,SAAL,GAAiB,KAAKD,YAAtB;AAEH;AACJ;;AAEDS,QAAAA,WAAW,GAAG;AACV,eAAKV,QAAL,GAAgBW,IAAI,CAACC,GAAL,CAAS,KAAKX,YAAd,EAA4B,KAAKD,QAAjC,CAAhB;AAEA,eAAKa,SAAL,CAAeP,MAAf,GAAyB,gBAAgB,KAAKN,QAA9C;AAEA,eAAKc,SAAL,CAAeC,IAAf,CAAoBC,MAApB,GAA6B,IAA7B;AACA,eAAKH,SAAL,CAAeE,IAAf,CAAoBC,MAApB,GAA6B,IAA7B;AACH;;AAEDR,QAAAA,WAAW,GAAG;AACV,eAAKK,SAAL,CAAeE,IAAf,CAAoBC,MAApB,GAA6B,KAA7B;AACA,eAAKF,SAAL,CAAeC,IAAf,CAAoBC,MAApB,GAA6B,KAA7B;AACH;;AAnDkC,O","sourcesContent":["import { _decorator, Component, Label, Node } from 'cc';\nconst { ccclass, property } = _decorator;\nimport { Pipes } from './Pipes';\n\n@ccclass('Results')\nexport class Results extends Component {\n    @property({\n        type:Label\n    })\n    public scoreLabel : Label;\n\n    @property({\n        type:Label\n    })\n    public highScore : Label;\n\n    @property({\n        type:Label\n    })\n    public resultEnd : Label;\n\n    maxScore : number = 0;\n    currentScore : number;\n    public lastScore : number = 0;\n\n    updateScore(num : number) {\n        this.currentScore = num;\n        this.scoreLabel.string = ('' + this.currentScore)\n    }\n\n    resetScore() {\n        this.updateScore(0);\n        this.lastScore = 0;\n        this.hideResults();\n    }\n\n    addScore() {\n        this.updateScore(this.currentScore + 1);\n        if (this.currentScore - this.lastScore >= 10) {\n            this.lastScore = this.currentScore;\n            \n        }\n    }\n\n    showResults() {\n        this.maxScore = Math.max(this.currentScore, this.maxScore);\n\n        this.highScore.string = ('High Score ' + this.maxScore);\n\n        this.resultEnd.node.active = true;\n        this.highScore.node.active = true;\n    }\n\n    hideResults() {\n        this.highScore.node.active = false;\n        this.resultEnd.node.active = false;\n    }\n\n}\n\n"]}