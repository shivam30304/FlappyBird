{"version":3,"sources":["file:///Users/shivam/Desktop/JumpBird/assets/Scripts/PipePool.ts"],"names":["_decorator","Component","instantiate","Node","NodePool","Prefab","ccclass","property","PipePool","type","pool","createPipe","initPool","initCount","i","prefabPipes","pipePoolHome","addChild","put","addPool","size","get","reset","removeAllChildren","clear"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,M,OAAAA,M;;;;;;;;;OACvD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;0BAKjBQ,Q,WADZF,OAAO,CAAC,UAAD,C,UAEHC,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAACJ;AADC,OAAD,C,UAKRE,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAACN;AADC,OAAD,C,2BAPb,MACaK,QADb,SAC8BP,SAD9B,CACwC;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAW7BS,IAX6B,GAWtB,IAAIN,QAAJ,EAXsB;AAAA,eAY7BO,UAZ6B;AAAA;;AAcpCC,QAAAA,QAAQ,GAAG;AACP,cAAIC,SAAS,GAAG,CAAhB;;AAEA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAApB,EAA+BC,CAAC,EAAhC,EAAoC;AAChC,iBAAKH,UAAL,GAAkBT,WAAW,CAAC,KAAKa,WAAN,CAA7B;;AAEA,gBAAID,CAAC,IAAI,CAAT,EAAY;AACR,mBAAKE,YAAL,CAAkBC,QAAlB,CAA2B,KAAKN,UAAhC;AACH,aAFD,MAEO;AACH,mBAAKD,IAAL,CAAUQ,GAAV,CAAc,KAAKP,UAAnB;AACH;AACJ;AACJ;;AAEDQ,QAAAA,OAAO,GAAG;AACN,cAAI,KAAKT,IAAL,CAAUU,IAAV,KAAmB,CAAvB,EAA0B;AACtB,iBAAKT,UAAL,GAAkB,KAAKD,IAAL,CAAUW,GAAV,EAAlB;AACH,WAFD,MAEO;AACH,iBAAKV,UAAL,GAAkBT,WAAW,CAAC,KAAKa,WAAN,CAA7B;AACH;;AAED,eAAKC,YAAL,CAAkBC,QAAlB,CAA2B,KAAKN,UAAhC;AACH;;AAEDW,QAAAA,KAAK,GAAG;AACJ,eAAKN,YAAL,CAAkBO,iBAAlB;AACA,eAAKb,IAAL,CAAUc,KAAV;AACA,eAAKZ,QAAL;AACH;;AA1CmC,O;;;;;iBAIf,I","sourcesContent":["import { _decorator, Component, instantiate, Node, NodePool, Prefab } from 'cc';\nconst { ccclass, property } = _decorator;\n\nimport { Pipes } from './Pipes';\n\n@ccclass('PipePool')\nexport class PipePool extends Component {\n    @property({\n        type:Prefab\n    })\n    public prefabPipes = null;\n\n    @property({\n        type:Node\n    })\n    public pipePoolHome;\n\n    public pool = new NodePool;\n    public createPipe;\n\n    initPool() {\n        let initCount = 3;\n\n        for (let i = 0; i < initCount; i++) {\n            this.createPipe = instantiate(this.prefabPipes);\n\n            if (i == 0) {\n                this.pipePoolHome.addChild(this.createPipe);\n            } else {\n                this.pool.put(this.createPipe);\n            }\n        }\n    }\n\n    addPool() {\n        if (this.pool.size() > 0) {\n            this.createPipe = this.pool.get();\n        } else {\n            this.createPipe = instantiate(this.prefabPipes);\n        }\n\n        this.pipePoolHome.addChild(this.createPipe);\n    }\n\n    reset() {\n        this.pipePoolHome.removeAllChildren();\n        this.pool.clear();\n        this.initPool();\n    }\n\n}\n\n"]}